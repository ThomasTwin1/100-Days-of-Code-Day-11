import random


"""
=====================================================================
Sherrard's House of Black Jack üé¥
=====================================================================
Author: Sherrard Antoine Thomas II
Date:   26 August 2025
Version: 1.0
Course:  100 Days of Python - Day 11 Project

Description:
------------
A simple text-based Blackjack game with custom house rules.
This program:
- Greets the player with ASCII art and rules.
- Requires pressing Enter to begin.
- Implements the following rules:
    1. The deck is unlimited in size.
    2. There are no jokers.
    3. Jack, Queen, King = 10.
    4. Ace = 1 or 11.
    Bonus Challenge after completion of project: 
    Add Charlie Rule- If you have 5 or more cards without busting, you win automatically. 

Notes:
------
- ASCII art uses raw strings (r""" """) to avoid escape errors.
- Extra "side quests" (animations, themed graphics, etc.) 
  are planned but not yet implemented.
- Side Quest (These quest should complete after the main quest):
  Add gifs or animations for the rules of Black Jack:
  1. Limit Breaker from Final Fantasy
  2. Joker from Batman
  3. Jack Black the actor, Queen the singer, King from Tekken (maybe something more universal)
  4. Ace (Look up something universal)
=====================================================================
"""


# ================================================================
# Black Jack Project
# üÉè Blackjack Game House Rules:
# ================================================================
# 1. 1Ô∏è‚É£ The deck is unlimited in size.
# 2. üö´ There are no jokers.
# 3. üëë Jack, Queen, King = 10.
# 4. üÇ° Ace = 1 or 11.
# 5. üñêÔ∏è (Day 11 Rule) ‚Äî If you have 5 or more cards without busting,
#    you automatically win. (üß± Charlie Rule)
#
# Side Quest ideas (to be added later):
# - Add gifs/animations to explain each card/rule theme
# ================================================================


# ================================================================
# Greeting Banner (ASCII Art)
# ------------------------------------------------
# Using a raw string (r"""...""") so Python doesn‚Äôt misinterpret
# backslashes in the ASCII art as escape characters.
# This banner is printed when the game begins.
# ================================================================
greeting = r"""
  ______   __                                                               __  __         
 /      \ |  \                                                             |  \|  \        
|  $$$$$$\| $$____    ______    ______    ______   ______    ______    ____| $$| $$_______ 
| $$___\$$| $$    \  /      \  /      \  /      \ |      \  /      \  /      $$ \$/       \\
 \$$    \ | $$$$$$$\|  $$$$$$\|  $$$$$$\|  $$$$$$\ \$$$$$$\|  $$$$$$\|  $$$$$$$  |  $$$$$$$
 _\$$$$$$\| $$  | $$| $$    $$| $$   \$$| $$   \$$/      $$| $$   \$$| $$  | $$   \$$    \ 
|  \__| $$| $$  | $$| $$$$$$$$| $$      | $$     |  $$$$$$$| $$      | $$__| $$   _\$$$$$$\\
 \$$    $$| $$  | $$ \$$     \| $$      | $$      \$$    $$| $$       \$$    $$  |       $$ 
  \$$$$$$  \$$   \$$  \$$$$$$$ \$$       \$$       \$$$$$$$ \$$        \$$$$$$$   \$$$$$$$ 


 __    __                                                                                  
|  \  |  \                                                                                 
| $$  | $$  ______   __    __   _______   ______                                           
| $$__| $$ /      \ |  \  |  \ /       \ /      \                                          
| $$    $$|  $$$$$$\| $$  | $$|  $$$$$$$|  $$$$$$\                                         
| $$$$$$$$| $$  | $$| $$  | $$ \$$    \ | $$    $$                                         
| $$  | $$| $$__/ $$| $$__/ $$ _\$$$$$$\| $$$$$$$$                                         
| $$  | $$ \$$    $$ \$$    $$|       $$ \$$     \                                         
 \$$   \$$  \$$$$$$   \$$$$$$  \$$$$$$$   \$$$$$$$                                         


            ______                                                                         
           /      \                                                                        
  ______  |  $$$$$$\                                                                       
 /      \ | $$_  \$$                                                                       
|  $$$$$$\| $$ \                                                                          
| $$  | $$| $$$$                                                                          
| $$__/ $$| $$                                                                           
 \$$    $$| $$                                                                           
  \$$$$$$  \$$                                                                           


 _______   __                      __                 _____                      __        
|       \ |  \                    |  \               |     \                    |  \       
| $$$$$$$\| $$  ______    _______ | $$   __           \$$$$$  ______    _______ | $$   __  
| $$__/ $$| $$ |      \  /       \| $$  /  \            | $$ |      \  /       \| $$  /  \ 
| $$    $$| $$  \$$$$$$\|  $$$$$$$| $$_/  $$       __   | $$  \$$$$$$\|  $$$$$$$| $$_/  $$ 
| $$$$$$$\| $$ /      $$| $$      | $$   $$       |  \  | $$ /      $$| $$      | $$   $$  
| $$__/ $$| $$|  $$$$$$$| $$_____ | $$$$$$\       | $$__| $$|  $$$$$$$| $$_____ | $$$$$$\  
| $$    $$| $$ \$$    $$ \$$     \| $$  \$$\       \$$    $$ \$$    $$ \$$     \| $$  \$$\ 
 \$$$$$$$  \$$  \$$$$$$$  \$$$$$$$ \$$   \$$        \$$$$$$   \$$$$$$$  \$$$$$$$ \$$   \$$ 
"""


# ================================================================
# Welcome Screen Loop
# ------------------------------------------------
# - Displays the game rules and waits for the player to press Enter.
# - input() returns an empty string "" when the user just presses Enter.
# - While loop keeps asking until the correct input (just Enter) is given.
# - Once Enter is pressed, the greeting banner is shown and loop breaks.
# ================================================================
while True:
    if input('''Welcome to Sherrard's House of Black Jack.
Here are the rules:
üÉè Sherrard's House Rules:
1Ô∏è‚É£ The deck is unlimited in size.
üö´ There are no jokers.
üëë Jack, Queen, King = 10.
üÇ° Ace = 1 or 11.
Press Enter to begin...
''') == "":        # Only accept empty input (Enter key)
        print(greeting)
        break       # Exit loop once correct input is received


# ================================================================
# Alternative Version (commented out)
# ------------------------------------------------
# - This version saves the player's input to a variable (`choice`)
#   instead of checking input() directly.
# - Both approaches work; storing in a variable can make it easier
#   to reuse or debug the input later.
# ================================================================
# while True:
#     choice = input('''Welcome to Sherrard's House of Black Jack:
# (rules repeated here)...
# ''')
#     if choice == "":
#         print(greeting)
#         break

# Deck of cards
deck_of_cards = [1,2,3,4,5,6,7,8,9,10,10,10,11]

# Player cards
player_cards =  [random.choice(deck_of_cards), random.choice(deck_of_cards)]

# Player score
player_score = sum(player_cards)


# Computer cards
computer_cards =  [random.choice(deck_of_cards)]

# Computer score
computer_score = sum(computer_cards)

# Result of 1st Round
print(f'''Your cards: {player_cards}, current score: {player_score}
Computer's first card: {computer_cards}: {computer_score}''')

# 1st time Ask player if they want another card
another_card = input("Type 'y' to get another card, type 'n' to pass:").lower()
print(another_card)

if another_card == 'y'.lower():
    # Add another card to the player's hand
    player_cards.append(random.choice(deck_of_cards))

    # Update player's score
    player_score = sum(player_cards)

# Player's hand stays the same
else:
    player_cards = player_cards
    player_score = player_score

# *For tomorrow* 
# Update computers hand

# Result of 2nd Round
print(f'''Your cards: {player_cards}, current score: {player_score}
Computer's first card: {computer_cards}: {computer_score}''')

# 2nd time Ask player if they want another card
another_card = input("Type 'y' to get another card, type 'n' to pass:").lower()
print(another_card)


