import random
import sys

"""
=====================================================================
Sherrard's House of Black Jack üé¥
=====================================================================
Author:  Sherrard Antoine Thomas II
Date:    28 August 2025
Version: 1.0
Course:  100 Days of Python - Day 11 Project

Description:
------------
A simple text-based Blackjack game with custom house rules.

Features:
- Greets the player with ASCII art and rules.
- Starts on Enter key.
- Card rules:
    1. The deck is unlimited in size.
    2. There are no jokers.
    3. Jack, Queen, King = 10.
    4. Ace = 11 (Note: basic version; no dynamic 1/11 switching yet)

Notes:
------
- ASCII art uses a raw string (r""" """) to avoid escape errors.
- ‚ÄúCharlie Rule‚Äù (5+ cards without bust) is documented for later but not yet implemented.
- Dealer currently draws to 16 before player decisions (kept as-is to avoid large changes).
=====================================================================
"""

# ================================================================
# Greeting Banner (ASCII Art)
# ================================================================
greeting = r"""
  ______   __                                                               __  __         
 /      \ |  \                                                             |  \|  \        
|  $$$$$$\| $$____    ______    ______    ______   ______    ______    ____| $$| $$_______ 
| $$___\$$| $$    \  /      \  /      \  /      \ |      \  /      \  /      $$ \$/       \
 \$$    \ | $$$$$$$\|  $$$$$$\|  $$$$$$\|  $$$$$$\ \$$$$$$\|  $$$$$$\|  $$$$$$$  |  $$$$$$$
 _\$$$$$$\| $$  | $$| $$    $$| $$   \$$| $$   \$$/      $$| $$   \$$| $$  | $$   \$$    \ 
|  \__| $$| $$  | $$| $$$$$$$$| $$      | $$     |  $$$$$$$| $$      | $$__| $$   _\$$$$$$\
 \$$    $$| $$  | $$ \$$     \| $$      | $$      \$$    $$| $$       \$$    $$  |       $$ 
  \$$$$$$  \$$   \$$  \$$$$$$$ \$$       \$$       \$$$$$$$ \$$        \$$$$$$$   \$$$$$$$  


 __    __                                                                                  
|  \  |  \                                                                                 
| $$  | $$  ______   __    __   _______   ______                                           
| $$__| $$ /      \ |  \  |  \ /       \ /      \                                          
| $$    $$|  $$$$$$\| $$  | $$|  $$$$$$$|  $$$$$$\                                         
| $$$$$$$$| $$  | $$| $$  | $$ \$$    \ | $$    $$                                         
| $$  | $$| $$__/ $$| $$__/ $$ _\$$$$$$\| $$$$$$$$                                         
| $$  | $$ \$$    $$ \$$    $$|       $$ \$$     \                                         
 \$$   \$$  \$$$$$$   \$$$$$$  \$$$$$$$   \$$$$$$$                                         


            ______                                                                         
           /      \                                                                        
  ______  |  $$$$$$\                                                                       
 /      \ | $$_  \$$                                                                       
|  $$$$$$\| $$ \                                                                           
| $$  | $$| $$$$                                                                           
| $$__/ $$| $$                                                                             
 \$$    $$| $$                                                                             
  \$$$$$$  \$$                                                                             


 _______   __                      __                 _____                      __        
|       \ |  \                    |  \               |     \                    |  \       
| $$$$$$$\| $$  ______    _______ | $$   __           \$$$$$  ______    _______ | $$   __  
| $$__/ $$| $$ |      \  /       \| $$  /  \            | $$ |      \  /       \| $$  /  \ 
| $$    $$| $$  \$$$$$$\|  $$$$$$$| $$_/  $$       __   | $$  \$$$$$$\|  $$$$$$$| $$_/  $$ 
| $$$$$$$\| $$ /      $$| $$      | $$   $$       |  \  | $$ /      $$| $$      | $$   $$  
| $$__/ $$| $$|  $$$$$$$| $$_____ | $$$$$$\       | $$__| $$|  $$$$$$$| $$_____ | $$$$$$\  
| $$    $$| $$ \$$    $$ \$$     \| $$  \$$\       \$$    $$ \$$    $$ \$$     \| $$  \$$\ 
 \$$$$$$$  \$$  \$$$$$$$  \$$$$$$$ \$$   \$$        \$$$$$$   \$$$$$$$  \$$$$$$$ \$$   \$$ 
"""

# ================================================================
# Welcome Screen Loop
# ================================================================
while True:
    if input('''Welcome to Sherrard's House of Black Jack.
Here are the rules:
üÉè Sherrard's House Rules:
1Ô∏è‚É£ The deck is unlimited in size.
üö´ There are no jokers.
üëë Jack, Queen, King = 10.
üÇ° Ace = 11 (basic version)
Press Enter to begin...
''') == "":
        print(greeting)
        break

# Deck of cards (basic Ace handling = 11)
deck_of_cards = [1,2,3,4,5,6,7,8,9,10,10,10,11]

# Player cards & score
player_cards = [random.choice(deck_of_cards), random.choice(deck_of_cards)]
player_score = sum(player_cards)

# Computer cards & drawing (kept before player decisions to avoid big changes)
computer_cards = [random.choice(deck_of_cards)]
while sum(computer_cards) <= 16:
    computer_cards.append(random.choice(deck_of_cards))
computer_score = sum(computer_cards)

# First reveal
print(f"Your cards: {player_cards}, current score: {player_score}")
print(f"Computer's first card: {computer_cards[0]}")

# First decision
another_card = input("Type 'y' to get another card, type 'n' to pass: ").lower()
print(another_card)

# Ask player up to 3 more times (original intent)
for i in range(3):
    if another_card == 'y':
        # Player hits
        player_cards.append(random.choice(deck_of_cards))
        player_score = sum(player_cards)

        print(f"Your cards: {player_cards}, current score: {player_score}")
        print(f"Computer's first card: {computer_cards[0]}")

        # Immediate bust check
        if player_score > 21:
            print(f"You went over 21! Final hand: {player_cards}, score: {player_score}")
            print(f"Computer's cards: {computer_cards}, computer score: {computer_score}")
            print("You lose üí•")
            sys.exit(0)

        # Ask again
        another_card = input("Type 'y' to get another card, type 'n' to pass: ").lower()
        print(another_card)

    else:
        # Player passes early, stop asking
        break

# ===== Final Outcome Check (runs if we didn't exit on bust) =====
# Recompute (kept explicit for clarity)
player_score = sum(player_cards)
computer_score = sum(computer_cards)

# Show final hands
print(f"\nYour cards: {player_cards}, current score: {player_score}")
print(f"Computer's cards: {computer_cards}, computer score: {computer_score}")

# Decide winner with explicit parentheses for clarity
if (player_score > 21) and (computer_score <= 21):
    print("You lose")
elif (computer_score > 21) and (player_score <= 21):
    print("You win")
elif (player_score > computer_score) and (player_score <= 21):
    print("You win")
elif (computer_score > player_score) and (computer_score <= 21):
    print("You lose")
elif (player_score == computer_score) and (player_score <= 21):
    print("Draw")
else:
    # Covers both over 21 (both bust) or any unexpected edge
    print("No result ‚Äî both busted or unexpected state.")
